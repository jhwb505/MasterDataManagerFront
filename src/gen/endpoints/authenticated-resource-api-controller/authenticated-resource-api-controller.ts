/**
 * Generated by orval v7.6.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  Arguments,
  Key
} from 'swr';

import useSWRMutation from 'swr/mutation';
import type {
  SWRMutationConfiguration
} from 'swr/mutation';

import type {
  GetUserDetailsParams
} from '../../models';

import { customInstance } from '../../../lib/apiClient';


  
  type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  
export const getUserDetails = (
    params: GetUserDetailsParams,
 options?: SecondParameter<typeof customInstance>) => {
    return customInstance<string>(
    {url: `/api/v1/user/details`, method: 'POST',
        params
    },
    options);
  }



export const getGetUserDetailsMutationFetcher = (params: GetUserDetailsParams, options?: SecondParameter<typeof customInstance>) => {
  return (_: Key, __: { arg: Arguments }): Promise<string> => {
    return getUserDetails(params, options);
  }
}
export const getGetUserDetailsMutationKey = (params: GetUserDetailsParams,) => [`/api/v1/user/details`, ...(params ? [params]: [])] as const;

export type GetUserDetailsMutationResult = NonNullable<Awaited<ReturnType<typeof getUserDetails>>>
export type GetUserDetailsMutationError = unknown

export const useGetUserDetails = <TError = unknown>(
  params: GetUserDetailsParams, options?: { swr?:SWRMutationConfiguration<Awaited<ReturnType<typeof getUserDetails>>, TError, Key, Arguments, Awaited<ReturnType<typeof getUserDetails>>> & { swrKey?: string }, request?: SecondParameter<typeof customInstance>}
) => {

  const {swr: swrOptions, request: requestOptions} = options ?? {}

  const swrKey = swrOptions?.swrKey ?? getGetUserDetailsMutationKey(params);
  const swrFn = getGetUserDetailsMutationFetcher(params, requestOptions);

  const query = useSWRMutation(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
