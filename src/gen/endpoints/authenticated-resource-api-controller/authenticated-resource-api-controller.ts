/**
 * Generated by orval v7.6.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import useSwr from 'swr';
import type {
  Key,
  SWRConfiguration
} from 'swr';

import type {
  GetUserDetailsParams,
  MdmUserDetailResponse
} from '../../models';

import { customInstance } from '../../../lib/apiClient';


  
  type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  
/**
 * ユーザー情報詳細を取得する
 * @summary ユーザー情報詳細取得
 */
export const getUserDetails = (
    params: GetUserDetailsParams,
 options?: SecondParameter<typeof customInstance>) => {
    return customInstance<MdmUserDetailResponse>(
    {url: `/api/v1/user/details`, method: 'GET',
        params
    },
    options);
  }



export const getGetUserDetailsKey = (params: GetUserDetailsParams,) => [`/api/v1/user/details`, ...(params ? [params]: [])] as const;

export type GetUserDetailsQueryResult = NonNullable<Awaited<ReturnType<typeof getUserDetails>>>
export type GetUserDetailsQueryError = unknown

/**
 * @summary ユーザー情報詳細取得
 */
export const useGetUserDetails = <TError = unknown>(
  params: GetUserDetailsParams, options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof getUserDetails>>, TError> & { swrKey?: Key, enabled?: boolean }, request?: SecondParameter<typeof customInstance> }
) => {
  const {swr: swrOptions, request: requestOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
  const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getGetUserDetailsKey(params) : null);
  const swrFn = () => getUserDetails(params, requestOptions)

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
